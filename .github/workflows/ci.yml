name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Quick Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install bats and dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y bats jq curl shellcheck yamllint

    - name: Run unit tests
      run: bats tests/version-checker.bats

    - name: Shell script linting
      run: |
        shellcheck version-checker.sh
        shellcheck lib/version-functions.sh

    - name: YAML validation
      run: yamllint -c .yamllint.yml monitoring-configs/tools.yaml

    - name: Smoke test - help command
      run: ./version-checker.sh --help

    - name: Smoke test - version check
      run: timeout 15 ./version-checker.sh --check gh || true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  auto-update:
    name: Auto Update Check
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq curl

    - name: Run version checker
      run: |
        ./version-checker.sh --check-all --output-format=json > updates.json 2>/dev/null || true

    - name: Check for updates
      run: |
        if [[ -s updates.json ]]; then
          echo "Updates available:"
          cat updates.json
          # 将来的にはここでPRを自動作成
        else
          echo "No updates available"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: Telegram Notification
    runs-on: ubuntu-latest
    if: failure() && github.ref == 'refs/heads/master'
    needs: [test]

    steps:
    - name: Send failure notification
      run: |
        if [[ -n "$TELEGRAM_BOT_URL" ]]; then
          curl -X POST "$TELEGRAM_BOT_URL" \
            -H "Content-Type: application/json" \
            -d "{\"message\": \"❌ CI failed in ${{ github.repository }} on ${{ github.ref }}\"}" || true
        fi
      env:
        TELEGRAM_BOT_URL: ${{ secrets.TELEGRAM_BOT_URL }}
